{"version":3,"file":"MinecraftRMI.js","sources":["../src/Communication.ts","../src/Schema.ts","../src/Server.ts","../src/Utils.ts","../src/Client.ts"],"sourcesContent":["import { DimensionTypes, system, world } from '@minecraft/server';\n\ninterface Message {\n  id: string;\n  endpoint: string;\n}\n\nexport interface InputMessage extends Message {\n  hasArguments: boolean;\n  timeout: number;\n}\n\nexport interface OutputMessage extends Message {\n  hasValue: boolean;\n  isError: boolean;\n}\n\nconst MINESCRIPTERS_NAMESPACE = 'minescripters';\n\nexport const buildServerNamespace = (namespace: string) => `${MINESCRIPTERS_NAMESPACE}_${namespace}`;\n\nexport const inputMessageEvent = (namespace: string) => `${buildServerNamespace(namespace)}:rmi.event-payload`;\n\nexport const sendEvent = (event: string) => {\n  DimensionTypes.getAll().some((dt) => {\n    return world.getDimension(dt.typeId)?.runCommand(`scriptevent ${event}`).successCount;\n  });\n};\n\nexport const argsKey = (namespace: string, message: Message) =>\n  `${buildServerNamespace(namespace)}:rmi.payload.${message.endpoint}.${message.id}.args`;\nexport const returnValueKey = (namespace: string, message: Message) =>\n  `${buildServerNamespace(namespace)}:rmi.payload.${message.endpoint}.${message.id}.return`;\n\nexport const setDynamicPropertyAndExpire = (key: string, value: unknown, timeout: number) => {\n  world.setDynamicProperty(key, JSON.stringify(value));\n  system.runTimeout(() => {\n    world.setDynamicProperty(key);\n  }, timeout);\n};\n","export enum SchemaEntryType {\n  OBJECT,\n  NUMBER,\n  STRING,\n  ARRAY,\n  BOOL,\n  ANY,\n}\n\ninterface SchemaEntryBase {\n  isOptional?: boolean;\n  allowNull?: boolean;\n}\n\nexport interface SchemaEntryNumber extends SchemaEntryBase {\n  type: SchemaEntryType.NUMBER;\n}\n\nexport interface SchemaEntryString extends SchemaEntryBase {\n  type: SchemaEntryType.STRING;\n}\n\nexport interface SchemaEntryObject extends SchemaEntryBase {\n  type: SchemaEntryType.OBJECT;\n  extraKeys?: SchemaEntry;\n  entries?: {\n    [key: string]: SchemaEntry;\n  };\n}\n\nexport interface SchemaEntryBool extends SchemaEntryBase {\n  type: SchemaEntryType.BOOL;\n}\n\nexport interface SchemaEntryArray extends SchemaEntryBase {\n  type: SchemaEntryType.ARRAY;\n  items?: SchemaEntry;\n}\n\nexport type SchemaEntry =\n  | SchemaEntryNumber\n  | SchemaEntryString\n  | SchemaEntryBool\n  | SchemaEntryObject\n  | SchemaEntryArray\n  | SchemaEntryType\n  | Array<SchemaEntry>;\n\ntype InternalSchema =\n  | SchemaEntryNumber\n  | SchemaEntryString\n  | SchemaEntryBool\n  | SchemaEntryObject\n  | SchemaEntryArray\n  | SchemaEntryType.ANY\n  | Array<SchemaEntry>;\n\nconst validateBase = (schema: SchemaEntryBase, obj: unknown) => {\n  if (!schema.isOptional) {\n    if (obj === undefined) {\n      throw new Error('Invalid schema, undefined but not optional');\n    }\n  }\n\n  if (!schema.allowNull) {\n    if (obj === null) {\n      throw new Error('Invalid schema, null but does not allow null');\n    }\n  }\n};\n\nexport const validate = (schema: SchemaEntry, obj: unknown) => {\n  schema = normalize(schema);\n\n  if (Array.isArray(schema)) {\n    let passed = false;\n    for (const subSchema of schema) {\n      try {\n        validate(subSchema, obj);\n        passed = true;\n        break;\n      } catch (e) {\n        console.error(e);\n      }\n    }\n\n    if (!passed) {\n      throw new Error('Invalid schema');\n    }\n    return;\n  }\n\n  if (schema === SchemaEntryType.ANY) {\n    return;\n  }\n\n  validateBase(schema, obj);\n\n  if (obj === null || obj === undefined) {\n    return;\n  }\n\n  if (schema.type === SchemaEntryType.NUMBER) {\n    if (typeof obj !== 'number' && typeof obj !== 'bigint') {\n      throw new Error('Invalid schema, not a number (or bigint)');\n    }\n  } else if (schema.type === SchemaEntryType.ARRAY) {\n    if (!Array.isArray(obj)) {\n      throw new Error('Invalid schema, not an array');\n    }\n\n    if (schema.items) {\n      for (const entry of obj) {\n        validate(schema.items, entry);\n      }\n    }\n  } else if (schema.type === SchemaEntryType.STRING) {\n    if (typeof obj !== 'string') {\n      throw new Error('Invalid schema, not a string');\n    }\n  } else if (schema.type === SchemaEntryType.BOOL) {\n    if (typeof obj !== 'boolean') {\n      throw new Error('Invalid schema, not a bool');\n    }\n  } else if (schema.type === SchemaEntryType.OBJECT) {\n    if (typeof obj !== 'object' || Array.isArray(obj)) {\n      throw new Error('Invalid schema, not an object');\n    }\n\n    if (schema.entries) {\n      for (const key of Object.keys(obj)) {\n        if (key in schema.entries) {\n          validate(schema.entries[key], (obj as { [key]: unknown })[key]);\n        } else {\n          if (!schema.extraKeys) {\n            throw new Error('Invalid schema, invalid key: ' + key);\n          }\n\n          validate(schema.extraKeys, (obj as { [key]: unknown })[key]);\n        }\n      }\n    } else if (schema.extraKeys) {\n      const extraKeys = schema.extraKeys;\n      Object.values(obj).forEach((o) => validate(extraKeys, o));\n    }\n  }\n};\n\nexport const validateArray = (schemas: Array<SchemaEntry>, objs: Array<unknown>) => {\n  objs = [...objs];\n  while (schemas.length > objs.length) {\n    objs.push(undefined);\n  }\n\n  for (let i = 0; i < schemas.length; i++) {\n    validate(schemas[i], objs[i]);\n  }\n};\n\nconst normalize = (schema: SchemaEntry): InternalSchema => {\n  if (schema === SchemaEntryType.NUMBER) {\n    return {\n      type: SchemaEntryType.NUMBER,\n    };\n  } else if (schema === SchemaEntryType.STRING) {\n    return {\n      type: SchemaEntryType.STRING,\n    };\n  } else if (schema === SchemaEntryType.OBJECT) {\n    return {\n      type: SchemaEntryType.OBJECT,\n    };\n  } else if (schema === SchemaEntryType.ARRAY) {\n    return {\n      type: SchemaEntryType.ARRAY,\n    };\n  } else if (schema === SchemaEntryType.BOOL) {\n    return {\n      type: SchemaEntryType.BOOL,\n    };\n  }\n\n  return schema;\n};\n","import { system, world } from '@minecraft/server';\nimport {\n  buildServerNamespace,\n  sendEvent,\n  argsKey,\n  InputMessage,\n  OutputMessage,\n  returnValueKey,\n  inputMessageEvent,\n  setDynamicPropertyAndExpire,\n} from './Communication';\nimport { SchemaEntry, validate, validateArray } from './Schema';\n\nexport interface Server {\n  namespace: string;\n  endpoints: Record<string, Endpoint>;\n}\n\nexport interface Endpoint {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  handler: (...params: Array<any>) => unknown;\n  schema?: EndpointSchema;\n}\n\nexport type EndpointSchema = {\n  arguments?: Array<SchemaEntry>;\n  returnValue?: SchemaEntry;\n};\n\nconst serverStopEvent = (server: Server) => `${buildServerNamespace(server.namespace)}:rmi.event-stop`;\nconst serverReturnEvent = (namespace: string, message: OutputMessage) => {\n  const localNamespace = `${buildServerNamespace(namespace)}_${message.id}`;\n  return `${localNamespace}:${message.endpoint}`;\n};\n\nconst returnError = (server: Server, payload: InputMessage, error: string) => {\n  const message: OutputMessage = {\n    id: payload.id,\n    endpoint: payload.endpoint,\n    hasValue: false,\n    isError: true,\n  };\n\n  const key = returnValueKey(server.namespace, message);\n  setDynamicPropertyAndExpire(key, error, payload.timeout);\n\n  sendEvent(`${serverReturnEvent(server.namespace, message)} ${JSON.stringify(message)}`);\n};\n\nconst returnValue = (server: Server, payload: InputMessage, value: unknown) => {\n  const message: OutputMessage = {\n    id: payload.id,\n    endpoint: payload.endpoint,\n    hasValue: value !== undefined,\n    isError: false,\n  };\n\n  if (value !== undefined) {\n    const key = returnValueKey(server.namespace, message);\n    setDynamicPropertyAndExpire(key, value, payload.timeout);\n  }\n\n  sendEvent(`${serverReturnEvent(server.namespace, message)} ${JSON.stringify(message)}`);\n};\n\nconst getParams = (namespace: string, payload: InputMessage): Array<unknown> => {\n  if (payload.hasArguments) {\n    return JSON.parse(world.getDynamicProperty(argsKey(namespace, payload)) as string) as unknown as Array<unknown>;\n  }\n\n  return [];\n};\n\nconst start = (server: Server) => {\n  const stopEvent = serverStopEvent(server);\n  const payloadEvent = inputMessageEvent(server.namespace);\n  const handler = system.afterEvents.scriptEventReceive.subscribe(\n    async (event) => {\n      if (event.id === stopEvent) {\n        system.afterEvents.scriptEventReceive.unsubscribe(handler);\n      } else if (event.id === payloadEvent) {\n        const payload = JSON.parse(event.message) as InputMessage;\n        // validate payload\n\n        if (!(payload.endpoint in server.endpoints)) {\n          returnError(server, payload, `Endpoint ${payload.endpoint} not found`);\n          return;\n        }\n\n        const params = getParams(server.namespace, payload);\n\n        const endpoint = server.endpoints[payload.endpoint];\n        if (endpoint.schema?.arguments) {\n          try {\n            validateArray(endpoint.schema.arguments, params);\n          } catch (e) {\n            returnError(server, payload, `Failed schema validation for arguments: ${e}`);\n          }\n        }\n\n        const response = await endpoint.handler(...params);\n\n        if (endpoint.schema?.returnValue) {\n          try {\n            validate(endpoint.schema.returnValue, response);\n          } catch (e) {\n            returnError(server, payload, `Failed schema validation for return value: ${e}`);\n          }\n        }\n\n        returnValue(server, payload, response);\n      }\n    },\n    {\n      namespaces: [buildServerNamespace(server.namespace)],\n    }\n  );\n};\n\nexport const stopServer = (server: Server) => {\n  sendEvent(serverStopEvent(server));\n};\n\nexport const startServer = (_server: Server) => {\n  if (_server.namespace.includes(':')) {\n    throw new Error('`:` is not a legal character for a namespace in: ' + _server.namespace);\n  }\n\n  const server = {\n    ..._server,\n    endpoints: { ..._server.endpoints },\n  };\n\n  start(server);\n};\n","export const makeId = (): string => {\n  return Math.random().toString(36).substring(2);\n};\n","import { system, world } from '@minecraft/server';\nimport {\n  buildServerNamespace,\n  sendEvent,\n  argsKey,\n  InputMessage,\n  OutputMessage,\n  returnValueKey,\n  inputMessageEvent,\n  setDynamicPropertyAndExpire,\n} from './Communication';\nimport { makeId } from './Utils';\n\ninterface ResponseListenerInput {\n  timeout: number;\n  endpoint: string;\n  namespace: string;\n  localNamespace: string;\n  eventKey: string;\n}\n\nconst responseListener = (input: ResponseListenerInput): [() => void, Promise<unknown>] => {\n  let handler: ReturnType<typeof system.afterEvents.scriptEventReceive.subscribe>;\n  const promise = new Promise<unknown>((resolve, reject) => {\n    const cancelHandler = system.runTimeout(() => {\n      reject(new Error(`Timeout: Timed out trying to run ${input.endpoint} of ${input.namespace}`));\n    }, input.timeout);\n\n    handler = system.afterEvents.scriptEventReceive.subscribe(\n      (event) => {\n        if (event.id === input.eventKey) {\n          try {\n            const returnMessage: OutputMessage = JSON.parse(event.message);\n            if (returnMessage.isError) {\n              const errorString = world.getDynamicProperty(returnValueKey(input.namespace, returnMessage)) as string;\n              reject(new Error(errorString));\n            } else {\n              if (returnMessage.hasValue) {\n                const returnValue = world.getDynamicProperty(returnValueKey(input.namespace, returnMessage)) as string;\n                world.setDynamicProperty(returnValueKey(input.namespace, returnMessage));\n                resolve(JSON.parse(returnValue));\n              } else {\n                resolve(undefined);\n              }\n            }\n          } catch (e) {\n            reject(e);\n          } finally {\n            system.clearRun(cancelHandler);\n          }\n        }\n      },\n      {\n        namespaces: [input.localNamespace],\n      }\n    );\n  });\n\n  const clean = () => {\n    system.afterEvents.scriptEventReceive.unsubscribe(handler);\n  };\n\n  return [clean, promise];\n};\n\nexport const sendMessage = async (\n  namespace: string,\n  endpoint: string,\n  args: Array<unknown> | undefined,\n  timeout: number = 60\n): Promise<unknown> => {\n  const messageId = makeId();\n  const localNamespace = `${buildServerNamespace(namespace)}_${messageId}`;\n  const eventKey = `${localNamespace}:${endpoint}`;\n\n  const message: InputMessage = {\n    id: messageId,\n    endpoint: endpoint,\n    hasArguments: args !== undefined && args.length > 0,\n    timeout,\n  };\n\n  const [clean, promise] = responseListener({\n    endpoint,\n    eventKey,\n    localNamespace,\n    namespace,\n    timeout,\n  });\n\n  try {\n    if (message.hasArguments) {\n      const argumentsKey = argsKey(namespace, message);\n      setDynamicPropertyAndExpire(argumentsKey, args, timeout);\n    }\n\n    sendEvent(`${inputMessageEvent(namespace)} ${JSON.stringify(message)}`);\n    return await promise;\n  } finally {\n    clean();\n  }\n};\n"],"names":[],"mappings":";;AAiBA,MAAM,uBAAuB,GAAG,eAAe;AAExC,MAAM,oBAAoB,GAAG,CAAC,SAAiB,KAAK,CAAG,EAAA,uBAAuB,CAAI,CAAA,EAAA,SAAS,EAAE;AAE7F,MAAM,iBAAiB,GAAG,CAAC,SAAiB,KAAK,GAAG,oBAAoB,CAAC,SAAS,CAAC,oBAAoB;AAEvG,MAAM,SAAS,GAAG,CAAC,KAAa,KAAI;IACzC,cAAc,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,KAAI;AAClC,QAAA,OAAO,KAAK,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,UAAU,CAAC,CAAe,YAAA,EAAA,KAAK,EAAE,CAAC,CAAC,YAAY;AACvF,KAAC,CAAC;AACJ,CAAC;AAEM,MAAM,OAAO,GAAG,CAAC,SAAiB,EAAE,OAAgB,KACzD,CAAA,EAAG,oBAAoB,CAAC,SAAS,CAAC,CAAA,aAAA,EAAgB,OAAO,CAAC,QAAQ,CAAA,CAAA,EAAI,OAAO,CAAC,EAAE,CAAA,KAAA,CAAO;AAClF,MAAM,cAAc,GAAG,CAAC,SAAiB,EAAE,OAAgB,KAChE,CAAA,EAAG,oBAAoB,CAAC,SAAS,CAAC,CAAA,aAAA,EAAgB,OAAO,CAAC,QAAQ,CAAA,CAAA,EAAI,OAAO,CAAC,EAAE,CAAA,OAAA,CAAS;AAEpF,MAAM,2BAA2B,GAAG,CAAC,GAAW,EAAE,KAAc,EAAE,OAAe,KAAI;AAC1F,IAAA,KAAK,CAAC,kBAAkB,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AACpD,IAAA,MAAM,CAAC,UAAU,CAAC,MAAK;AACrB,QAAA,KAAK,CAAC,kBAAkB,CAAC,GAAG,CAAC;KAC9B,EAAE,OAAO,CAAC;AACb,CAAC;;ICvCW;AAAZ,CAAA,UAAY,eAAe,EAAA;AACzB,IAAA,eAAA,CAAA,eAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAM;AACN,IAAA,eAAA,CAAA,eAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAM;AACN,IAAA,eAAA,CAAA,eAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAM;AACN,IAAA,eAAA,CAAA,eAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAK;AACL,IAAA,eAAA,CAAA,eAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAI;AACJ,IAAA,eAAA,CAAA,eAAA,CAAA,KAAA,CAAA,GAAA,CAAA,CAAA,GAAA,KAAG;AACL,CAAC,EAPW,eAAe,KAAf,eAAe,GAO1B,EAAA,CAAA,CAAA;AAkDD,MAAM,YAAY,GAAG,CAAC,MAAuB,EAAE,GAAY,KAAI;AAC7D,IAAA,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;AACtB,QAAA,IAAI,GAAG,KAAK,SAAS,EAAE;AACrB,YAAA,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC;;;AAIjE,IAAA,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;AACrB,QAAA,IAAI,GAAG,KAAK,IAAI,EAAE;AAChB,YAAA,MAAM,IAAI,KAAK,CAAC,8CAA8C,CAAC;;;AAGrE,CAAC;MAEY,QAAQ,GAAG,CAAC,MAAmB,EAAE,GAAY,KAAI;AAC5D,IAAA,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;AAE1B,IAAA,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;QACzB,IAAI,MAAM,GAAG,KAAK;AAClB,QAAA,KAAK,MAAM,SAAS,IAAI,MAAM,EAAE;AAC9B,YAAA,IAAI;AACF,gBAAA,QAAQ,CAAC,SAAS,EAAE,GAAG,CAAC;gBACxB,MAAM,GAAG,IAAI;gBACb;;YACA,OAAO,CAAC,EAAE;AACV,gBAAA,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;;;QAIpB,IAAI,CAAC,MAAM,EAAE;AACX,YAAA,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC;;QAEnC;;AAGF,IAAA,IAAI,MAAM,KAAK,eAAe,CAAC,GAAG,EAAE;QAClC;;AAGF,IAAA,YAAY,CAAC,MAAM,EAAE,GAAG,CAAC;IAEzB,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,EAAE;QACrC;;IAGF,IAAI,MAAM,CAAC,IAAI,KAAK,eAAe,CAAC,MAAM,EAAE;QAC1C,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AACtD,YAAA,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC;;;SAExD,IAAI,MAAM,CAAC,IAAI,KAAK,eAAe,CAAC,KAAK,EAAE;QAChD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;AACvB,YAAA,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC;;AAGjD,QAAA,IAAI,MAAM,CAAC,KAAK,EAAE;AAChB,YAAA,KAAK,MAAM,KAAK,IAAI,GAAG,EAAE;AACvB,gBAAA,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC;;;;SAG5B,IAAI,MAAM,CAAC,IAAI,KAAK,eAAe,CAAC,MAAM,EAAE;AACjD,QAAA,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AAC3B,YAAA,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC;;;SAE5C,IAAI,MAAM,CAAC,IAAI,KAAK,eAAe,CAAC,IAAI,EAAE;AAC/C,QAAA,IAAI,OAAO,GAAG,KAAK,SAAS,EAAE;AAC5B,YAAA,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC;;;SAE1C,IAAI,MAAM,CAAC,IAAI,KAAK,eAAe,CAAC,MAAM,EAAE;AACjD,QAAA,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;AACjD,YAAA,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC;;AAGlD,QAAA,IAAI,MAAM,CAAC,OAAO,EAAE;YAClB,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;AAClC,gBAAA,IAAI,GAAG,IAAI,MAAM,CAAC,OAAO,EAAE;AACzB,oBAAA,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,EAAG,GAA0B,CAAC,GAAG,CAAC,CAAC;;qBAC1D;AACL,oBAAA,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;AACrB,wBAAA,MAAM,IAAI,KAAK,CAAC,+BAA+B,GAAG,GAAG,CAAC;;oBAGxD,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAG,GAA0B,CAAC,GAAG,CAAC,CAAC;;;;AAG3D,aAAA,IAAI,MAAM,CAAC,SAAS,EAAE;AAC3B,YAAA,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS;YAClC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;;;AAG/D;MAEa,aAAa,GAAG,CAAC,OAA2B,EAAE,IAAoB,KAAI;AACjF,IAAA,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC;IAChB,OAAO,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE;AACnC,QAAA,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;;AAGtB,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACvC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;;AAEjC;AAEA,MAAM,SAAS,GAAG,CAAC,MAAmB,KAAoB;AACxD,IAAA,IAAI,MAAM,KAAK,eAAe,CAAC,MAAM,EAAE;QACrC,OAAO;YACL,IAAI,EAAE,eAAe,CAAC,MAAM;SAC7B;;AACI,SAAA,IAAI,MAAM,KAAK,eAAe,CAAC,MAAM,EAAE;QAC5C,OAAO;YACL,IAAI,EAAE,eAAe,CAAC,MAAM;SAC7B;;AACI,SAAA,IAAI,MAAM,KAAK,eAAe,CAAC,MAAM,EAAE;QAC5C,OAAO;YACL,IAAI,EAAE,eAAe,CAAC,MAAM;SAC7B;;AACI,SAAA,IAAI,MAAM,KAAK,eAAe,CAAC,KAAK,EAAE;QAC3C,OAAO;YACL,IAAI,EAAE,eAAe,CAAC,KAAK;SAC5B;;AACI,SAAA,IAAI,MAAM,KAAK,eAAe,CAAC,IAAI,EAAE;QAC1C,OAAO;YACL,IAAI,EAAE,eAAe,CAAC,IAAI;SAC3B;;AAGH,IAAA,OAAO,MAAM;AACf,CAAC;;AC1JD,MAAM,eAAe,GAAG,CAAC,MAAc,KAAK,CAAG,EAAA,oBAAoB,CAAC,MAAM,CAAC,SAAS,CAAC,iBAAiB;AACtG,MAAM,iBAAiB,GAAG,CAAC,SAAiB,EAAE,OAAsB,KAAI;AACtE,IAAA,MAAM,cAAc,GAAG,CAAG,EAAA,oBAAoB,CAAC,SAAS,CAAC,CAAA,CAAA,EAAI,OAAO,CAAC,EAAE,CAAA,CAAE;AACzE,IAAA,OAAO,GAAG,cAAc,CAAA,CAAA,EAAI,OAAO,CAAC,QAAQ,EAAE;AAChD,CAAC;AAED,MAAM,WAAW,GAAG,CAAC,MAAc,EAAE,OAAqB,EAAE,KAAa,KAAI;AAC3E,IAAA,MAAM,OAAO,GAAkB;QAC7B,EAAE,EAAE,OAAO,CAAC,EAAE;QACd,QAAQ,EAAE,OAAO,CAAC,QAAQ;AAC1B,QAAA,QAAQ,EAAE,KAAK;AACf,QAAA,OAAO,EAAE,IAAI;KACd;IAED,MAAM,GAAG,GAAG,cAAc,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC;IACrD,2BAA2B,CAAC,GAAG,EAAE,KAAK,EAAE,OAAO,CAAC,OAAO,CAAC;AAExD,IAAA,SAAS,CAAC,CAAG,EAAA,iBAAiB,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAI,CAAA,EAAA,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAA,CAAE,CAAC;AACzF,CAAC;AAED,MAAM,WAAW,GAAG,CAAC,MAAc,EAAE,OAAqB,EAAE,KAAc,KAAI;AAC5E,IAAA,MAAM,OAAO,GAAkB;QAC7B,EAAE,EAAE,OAAO,CAAC,EAAE;QACd,QAAQ,EAAE,OAAO,CAAC,QAAQ;QAC1B,QAAQ,EAAE,KAAK,KAAK,SAAS;AAC7B,QAAA,OAAO,EAAE,KAAK;KACf;AAED,IAAA,IAAI,KAAK,KAAK,SAAS,EAAE;QACvB,MAAM,GAAG,GAAG,cAAc,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC;QACrD,2BAA2B,CAAC,GAAG,EAAE,KAAK,EAAE,OAAO,CAAC,OAAO,CAAC;;AAG1D,IAAA,SAAS,CAAC,CAAG,EAAA,iBAAiB,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAI,CAAA,EAAA,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAA,CAAE,CAAC;AACzF,CAAC;AAED,MAAM,SAAS,GAAG,CAAC,SAAiB,EAAE,OAAqB,KAAoB;AAC7E,IAAA,IAAI,OAAO,CAAC,YAAY,EAAE;AACxB,QAAA,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,kBAAkB,CAAC,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,CAAW,CAA8B;;AAGjH,IAAA,OAAO,EAAE;AACX,CAAC;AAED,MAAM,KAAK,GAAG,CAAC,MAAc,KAAI;AAC/B,IAAA,MAAM,SAAS,GAAG,eAAe,CAAC,MAAM,CAAC;IACzC,MAAM,YAAY,GAAG,iBAAiB,CAAC,MAAM,CAAC,SAAS,CAAC;AACxD,IAAA,MAAM,OAAO,GAAG,MAAM,CAAC,WAAW,CAAC,kBAAkB,CAAC,SAAS,CAC7D,OAAO,KAAK,KAAI;AACd,QAAA,IAAI,KAAK,CAAC,EAAE,KAAK,SAAS,EAAE;YAC1B,MAAM,CAAC,WAAW,CAAC,kBAAkB,CAAC,WAAW,CAAC,OAAO,CAAC;;AACrD,aAAA,IAAI,KAAK,CAAC,EAAE,KAAK,YAAY,EAAE;YACpC,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAiB;;YAGzD,IAAI,EAAE,OAAO,CAAC,QAAQ,IAAI,MAAM,CAAC,SAAS,CAAC,EAAE;gBAC3C,WAAW,CAAC,MAAM,EAAE,OAAO,EAAE,CAAY,SAAA,EAAA,OAAO,CAAC,QAAQ,CAAY,UAAA,CAAA,CAAC;gBACtE;;YAGF,MAAM,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC;YAEnD,MAAM,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC;AACnD,YAAA,IAAI,QAAQ,CAAC,MAAM,EAAE,SAAS,EAAE;AAC9B,gBAAA,IAAI;oBACF,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC;;gBAChD,OAAO,CAAC,EAAE;oBACV,WAAW,CAAC,MAAM,EAAE,OAAO,EAAE,CAA2C,wCAAA,EAAA,CAAC,CAAE,CAAA,CAAC;;;YAIhF,MAAM,QAAQ,GAAG,MAAM,QAAQ,CAAC,OAAO,CAAC,GAAG,MAAM,CAAC;AAElD,YAAA,IAAI,QAAQ,CAAC,MAAM,EAAE,WAAW,EAAE;AAChC,gBAAA,IAAI;oBACF,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,EAAE,QAAQ,CAAC;;gBAC/C,OAAO,CAAC,EAAE;oBACV,WAAW,CAAC,MAAM,EAAE,OAAO,EAAE,CAA8C,2CAAA,EAAA,CAAC,CAAE,CAAA,CAAC;;;AAInF,YAAA,WAAW,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC;;AAE1C,KAAC,EACD;QACE,UAAU,EAAE,CAAC,oBAAoB,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AACrD,KAAA,CACF;AACH,CAAC;AAMY,MAAA,WAAW,GAAG,CAAC,OAAe,KAAI;IAC7C,IAAI,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;QACnC,MAAM,IAAI,KAAK,CAAC,mDAAmD,GAAG,OAAO,CAAC,SAAS,CAAC;;AAG1F,IAAA,MAAM,MAAM,GAAG;AACb,QAAA,GAAG,OAAO;AACV,QAAA,SAAS,EAAE,EAAE,GAAG,OAAO,CAAC,SAAS,EAAE;KACpC;IAED,KAAK,CAAC,MAAM,CAAC;AACf;;ACtIO,MAAM,MAAM,GAAG,MAAa;AACjC,IAAA,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;AAChD,CAAC;;ACmBD,MAAM,gBAAgB,GAAG,CAAC,KAA4B,KAAoC;AACxF,IAAA,IAAI,OAA2E;IAC/E,MAAM,OAAO,GAAG,IAAI,OAAO,CAAU,CAAC,OAAO,EAAE,MAAM,KAAI;AACvD,QAAA,MAAM,aAAa,GAAG,MAAM,CAAC,UAAU,CAAC,MAAK;AAC3C,YAAA,MAAM,CAAC,IAAI,KAAK,CAAC,oCAAoC,KAAK,CAAC,QAAQ,CAAA,IAAA,EAAO,KAAK,CAAC,SAAS,CAAE,CAAA,CAAC,CAAC;AAC/F,SAAC,EAAE,KAAK,CAAC,OAAO,CAAC;AAEjB,QAAA,OAAO,GAAG,MAAM,CAAC,WAAW,CAAC,kBAAkB,CAAC,SAAS,CACvD,CAAC,KAAK,KAAI;YACR,IAAI,KAAK,CAAC,EAAE,KAAK,KAAK,CAAC,QAAQ,EAAE;AAC/B,gBAAA,IAAI;oBACF,MAAM,aAAa,GAAkB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;AAC9D,oBAAA,IAAI,aAAa,CAAC,OAAO,EAAE;AACzB,wBAAA,MAAM,WAAW,GAAG,KAAK,CAAC,kBAAkB,CAAC,cAAc,CAAC,KAAK,CAAC,SAAS,EAAE,aAAa,CAAC,CAAW;AACtG,wBAAA,MAAM,CAAC,IAAI,KAAK,CAAC,WAAW,CAAC,CAAC;;yBACzB;AACL,wBAAA,IAAI,aAAa,CAAC,QAAQ,EAAE;AAC1B,4BAAA,MAAM,WAAW,GAAG,KAAK,CAAC,kBAAkB,CAAC,cAAc,CAAC,KAAK,CAAC,SAAS,EAAE,aAAa,CAAC,CAAW;AACtG,4BAAA,KAAK,CAAC,kBAAkB,CAAC,cAAc,CAAC,KAAK,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC;4BACxE,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;;6BAC3B;4BACL,OAAO,CAAC,SAAS,CAAC;;;;gBAGtB,OAAO,CAAC,EAAE;oBACV,MAAM,CAAC,CAAC,CAAC;;wBACD;AACR,oBAAA,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC;;;AAGpC,SAAC,EACD;AACE,YAAA,UAAU,EAAE,CAAC,KAAK,CAAC,cAAc,CAAC;AACnC,SAAA,CACF;AACH,KAAC,CAAC;IAEF,MAAM,KAAK,GAAG,MAAK;QACjB,MAAM,CAAC,WAAW,CAAC,kBAAkB,CAAC,WAAW,CAAC,OAAO,CAAC;AAC5D,KAAC;AAED,IAAA,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC;AACzB,CAAC;AAEM,MAAM,WAAW,GAAG,OACzB,SAAiB,EACjB,QAAgB,EAChB,IAAgC,EAChC,OAAkB,GAAA,EAAE,KACA;AACpB,IAAA,MAAM,SAAS,GAAG,MAAM,EAAE;IAC1B,MAAM,cAAc,GAAG,CAAA,EAAG,oBAAoB,CAAC,SAAS,CAAC,CAAA,CAAA,EAAI,SAAS,CAAA,CAAE;AACxE,IAAA,MAAM,QAAQ,GAAG,CAAA,EAAG,cAAc,CAAI,CAAA,EAAA,QAAQ,EAAE;AAEhD,IAAA,MAAM,OAAO,GAAiB;AAC5B,QAAA,EAAE,EAAE,SAAS;AACb,QAAA,QAAQ,EAAE,QAAQ;QAClB,YAAY,EAAE,IAAI,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC;QACnD,OAAO;KACR;AAED,IAAA,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,gBAAgB,CAAC;QACxC,QAAQ;QACR,QAAQ;QACR,cAAc;QACd,SAAS;QACT,OAAO;AACR,KAAA,CAAC;AAEF,IAAA,IAAI;AACF,QAAA,IAAI,OAAO,CAAC,YAAY,EAAE;YACxB,MAAM,YAAY,GAAG,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC;AAChD,YAAA,2BAA2B,CAAC,YAAY,EAAE,IAAI,EAAE,OAAO,CAAC;;AAG1D,QAAA,SAAS,CAAC,CAAA,EAAG,iBAAiB,CAAC,SAAS,CAAC,CAAA,CAAA,EAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAA,CAAE,CAAC;QACvE,OAAO,MAAM,OAAO;;YACZ;AACR,QAAA,KAAK,EAAE;;AAEX;;;;"}